{
    "sourceFile": "app/Http/Controllers/ProductController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1688958098816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1688958111317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -638,9 +638,9 @@\n         $contacts = DB::table('contacts')->get();\n \n         $contactsArray = json_decode(json_encode($contacts), true);\n \n-    return redirect('/admin/contact');\n+    return redirect('/admin/contact-info');\n }\n \n public function ret_contact(Request $request){\n     $request->validate(\n@@ -667,9 +667,9 @@\n \n         $messages = DB::table('messages')->get();\n \n         $messagesArray = json_decode(json_encode($messages), true);\n-    return redirect('/contact-us');\n+    return redirect('/contact');\n }\n \n public function messages(){\n     $messages=Messages::all()->toArray();\n"
                },
                {
                    "date": 1688958260797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -487,13 +487,8 @@\n \n     return view('backend.view_order')->with(['customers' => [$customer], 'order' => $order, 'orderitems' => $orderitem, 'orders' => [$order]]);\n }\n \n-public function dresses()\n-{\n-    $products = Product::all()->toArray(); //take data out of model\n-    return view('frontend.category.dresses')->with('products',$products);\n-}\n \n public function category($product_category)\n {\n     $products = Product::where('product_category', $product_category)->get();\n"
                },
                {
                    "date": 1688961257874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1037,6 +1037,8 @@\n         $footer= footer::find($id);\n         $footer->delete();\n         return redirect('/admin/homesettings');\n     }\n-\n+    public function account_settings()){\n+        return view('backend.account_settings');\n+    }\n }\n"
                },
                {
                    "date": 1688961263294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1037,8 +1037,8 @@\n         $footer= footer::find($id);\n         $footer->delete();\n         return redirect('/admin/homesettings');\n     }\n-    public function account_settings()){\n+    public function account_settings(){\n         return view('backend.account_settings');\n     }\n }\n"
                },
                {
                    "date": 1688961753741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1038,7 +1038,8 @@\n         $footer->delete();\n         return redirect('/admin/homesettings');\n     }\n     public function account_settings(){\n+        $admin=User::all()->toArray;\n         return view('backend.account_settings');\n     }\n }\n"
                },
                {
                    "date": 1688961783696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1038,8 +1038,8 @@\n         $footer->delete();\n         return redirect('/admin/homesettings');\n     }\n     public function account_settings(){\n-        $admin=User::all()->toArray;\n-        return view('backend.account_settings');\n+        $admin=User::all()->toArray();\n+        return view('backend.account_settings')->with('admin',$admin);\n     }\n }\n"
                },
                {
                    "date": 1688961952401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n use App\\Models\\Header;\n use App\\Models\\Logo;\n use App\\Models\\Footer;\n use App\\Models\\Variant;\n+use App\\Models\\USer;\n use Illuminate\\Support\\Facades\\Storage;\n use Illuminate\\Support\\Facades\\Session;\n \n use DB;\n"
                },
                {
                    "date": 1688961991579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1040,7 +1040,8 @@\n         return redirect('/admin/homesettings');\n     }\n     public function account_settings(){\n         $admin=User::all()->toArray();\n+        dd($admin);\n         return view('backend.account_settings')->with('admin',$admin);\n     }\n }\n"
                },
                {
                    "date": 1688962034858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1041,7 +1041,7 @@\n     }\n     public function account_settings(){\n         $admin=User::all()->toArray();\n         dd($admin);\n-        return view('backend.account_settings')->with('admin',$admin);\n+        return view('backend.account_settings')->with('admin',[$admin]);\n     }\n }\n"
                },
                {
                    "date": 1688962044003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1041,7 +1041,7 @@\n     }\n     public function account_settings(){\n         $admin=User::all()->toArray();\n         dd($admin);\n-        return view('backend.account_settings')->with('admin',[$admin]);\n+        return view('backend.account_settings')->with('admin',$admin);\n     }\n }\n"
                },
                {
                    "date": 1688962059764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1040,8 +1040,8 @@\n         return redirect('/admin/homesettings');\n     }\n     public function account_settings(){\n         $admin=User::all()->toArray();\n-        dd($admin);\n+        // dd($admin);\n         return view('backend.account_settings')->with('admin',$admin);\n     }\n }\n"
                },
                {
                    "date": 1689016807872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1043,5 +1043,41 @@\n         $admin=User::all()->toArray();\n         // dd($admin);\n         return view('backend.account_settings')->with('admin',$admin);\n     }\n+    public function cartsettings(){\n+        $categories = Category::all()->toArray();\n+        return view('backend.cartsettings')->with(['categories'=>$categories]);\n+    }\n+    public function ret_cartsettings(Request $request)\n+    {\n+        $headers = [];\n+        $categories = Category::all()->toArray();\n+        $headers[] = [\n+            'header_name' => 'Home',\n+            'is_checked' => $request->has('home'),\n+        ];\n+        foreach ($categories as $category) {\n+            $headers[] = [\n+                'header_name' => $category['category_name'],\n+                'is_checked' => $request->has($category['category_name']),\n+            ];\n+        }\n+        $headers[] = [\n+            'header_name' => 'Blog',\n+            'is_checked' => $request->has('blog'),\n+        ];\n+\n+        $headers[] = [\n+            'header_name' => 'Contact',\n+            'is_checked' => $request->has('contact'),\n+        ];\n+    // dd($headers);\n+        Header::truncate(); // Clear existing menu settings (optional)\n+\n+        foreach ($headers as $header) {\n+            Header::create($header);\n+        }\n+\n+        return redirect('/admin/homesettings')->with(['categories' => $categories]);\n+    }\n }\n"
                },
                {
                    "date": 1689016844165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1049,35 +1049,7 @@\n         return view('backend.cartsettings')->with(['categories'=>$categories]);\n     }\n     public function ret_cartsettings(Request $request)\n     {\n-        $headers = [];\n-        $categories = Category::all()->toArray();\n-        $headers[] = [\n-            'header_name' => 'Home',\n-            'is_checked' => $request->has('home'),\n-        ];\n-        foreach ($categories as $category) {\n-            $headers[] = [\n-                'header_name' => $category['category_name'],\n-                'is_checked' => $request->has($category['category_name']),\n-            ];\n-        }\n-        $headers[] = [\n-            'header_name' => 'Blog',\n-            'is_checked' => $request->has('blog'),\n-        ];\n-\n-        $headers[] = [\n-            'header_name' => 'Contact',\n-            'is_checked' => $request->has('contact'),\n-        ];\n-    // dd($headers);\n-        Header::truncate(); // Clear existing menu settings (optional)\n-\n-        foreach ($headers as $header) {\n-            Header::create($header);\n-        }\n-\n         return redirect('/admin/homesettings')->with(['categories' => $categories]);\n     }\n }\n"
                },
                {
                    "date": 1689016861471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1044,12 +1044,12 @@\n         // dd($admin);\n         return view('backend.account_settings')->with('admin',$admin);\n     }\n     public function cartsettings(){\n-        $categories = Category::all()->toArray();\n+        $shipping = Category::all()->toArray();\n         return view('backend.cartsettings')->with(['categories'=>$categories]);\n     }\n     public function ret_cartsettings(Request $request)\n     {\n-        return redirect('/admin/homesettings')->with(['categories' => $categories]);\n+        return redirect('/admin/cartsettings')->with(['categories' => $categories]);\n     }\n }\n"
                },
                {
                    "date": 1689017097341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1044,12 +1044,12 @@\n         // dd($admin);\n         return view('backend.account_settings')->with('admin',$admin);\n     }\n     public function cartsettings(){\n-        $shipping = Category::all()->toArray();\n-        return view('backend.cartsettings')->with(['categories'=>$categories]);\n+        $shipping = Cart::all()->toArray();\n+        return view('backend.cartsettings')->with(['shipping'=>$shipping]);\n     }\n     public function ret_cartsettings(Request $request)\n     {\n-        return redirect('/admin/cartsettings')->with(['categories' => $categories]);\n+        return redirect('/admin/cartsettings')->with(['shipping' => $shipping]);\n     }\n }\n"
                },
                {
                    "date": 1689017142237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n use App\\Models\\Header;\n use App\\Models\\Logo;\n use App\\Models\\Footer;\n use App\\Models\\Variant;\n-use App\\Models\\USer;\n+use App\\Models\\User;\n+use App\\Models\\Cart;\n use Illuminate\\Support\\Facades\\Storage;\n use Illuminate\\Support\\Facades\\Session;\n \n use DB;\n"
                },
                {
                    "date": 1689017523033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1049,8 +1049,27 @@\n         $shipping = Cart::all()->toArray();\n         return view('backend.cartsettings')->with(['shipping'=>$shipping]);\n     }\n     public function ret_cartsettings(Request $request)\n-    {\n+    {$request->validate(\n+        [\n+            'contact_address'=>'required',\n+            'contact_number'=>'required',\n+            'contact_email'=>'required',\n+        ]\n+        );\n+        $Address=$request->input('contact_address');\n+        $Phone=$request->input('contact_number');\n+        $Email=$request->input('contact_email');\n+\n+        $data=array('Address'=>$Address,\n+        \"Phone\"=>$Phone,\n+        \"Email\"=>$Email,\n+    );\n+        DB::table('contacts')->insert($data);\n+\n+        $contacts = DB::table('contacts')->get();\n+\n+        $contactsArray = json_decode(json_encode($contacts), true);\n         return redirect('/admin/cartsettings')->with(['shipping' => $shipping]);\n     }\n }\n"
                },
                {
                    "date": 1689017548337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1051,20 +1051,13 @@\n     }\n     public function ret_cartsettings(Request $request)\n     {$request->validate(\n         [\n-            'contact_address'=>'required',\n-            'contact_number'=>'required',\n-            'contact_email'=>'required',\n+            'shipping'=>'required',\n         ]\n         );\n-        $Address=$request->input('contact_address');\n-        $Phone=$request->input('contact_number');\n-        $Email=$request->input('contact_email');\n-\n+        $Address=$request->input('shipping');\n         $data=array('Address'=>$Address,\n-        \"Phone\"=>$Phone,\n-        \"Email\"=>$Email,\n     );\n         DB::table('contacts')->insert($data);\n \n         $contacts = DB::table('contacts')->get();\n"
                },
                {
                    "date": 1689017588504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1054,10 +1054,10 @@\n         [\n             'shipping'=>'required',\n         ]\n         );\n-        $Address=$request->input('shipping');\n-        $data=array('Address'=>$Address,\n+        $shipping=$request->input('shipping');\n+        $data=array('Shipping'=>$shipping,\n     );\n         DB::table('contacts')->insert($data);\n \n         $contacts = DB::table('contacts')->get();\n"
                },
                {
                    "date": 1689017595794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1057,9 +1057,9 @@\n         );\n         $shipping=$request->input('shipping');\n         $data=array('Shipping'=>$shipping,\n     );\n-        DB::table('contacts')->insert($data);\n+        DB::table('carts')->insert($data);\n \n         $contacts = DB::table('contacts')->get();\n \n         $contactsArray = json_decode(json_encode($contacts), true);\n"
                },
                {
                    "date": 1689017616353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1059,10 +1059,10 @@\n         $data=array('Shipping'=>$shipping,\n     );\n         DB::table('carts')->insert($data);\n \n-        $contacts = DB::table('carts')->get();\n+        $shipping = DB::table('carts')->get();\n \n-        $contactsArray = json_decode(json_encode($contacts), true);\n+        $shippingArray = json_decode(json_encode($shipping), true);\n         return redirect('/admin/cartsettings')->with(['shipping' => $shipping]);\n     }\n }\n"
                },
                {
                    "date": 1689017746825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,9 +261,9 @@\n \n public function cart(){\n     $cartItems = session()->get('cart', []);\n     $products = Product::whereIn('id', array_keys($cartItems))->get();\n-\n+    $shipping = Cart::all()->toArray;\n     return view('frontend.cart', ['products' => $products]);\n }\n \n public function addToCart(Request $request)\n"
                }
            ],
            "date": 1688958098816,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Carbon\\Carbon;\nuse App\\Models\\Product;\nuse App\\Models\\ProductCategory;\nuse App\\Models\\Customer;\nuse App\\Models\\Orderitem;\nuse App\\Models\\Order;\nuse App\\Models\\Contact;\nuse App\\Models\\Blog;\nuse App\\Models\\Messages;\nuse App\\Models\\Brand;\nuse App\\Models\\Category;\nuse App\\Models\\Carousal;\nuse App\\Models\\Banner;\nuse App\\Models\\Service;\nuse App\\Models\\Header;\nuse App\\Models\\Logo;\nuse App\\Models\\Footer;\nuse App\\Models\\Variant;\nuse Illuminate\\Support\\Facades\\Storage;\nuse Illuminate\\Support\\Facades\\Session;\n\nuse DB;\n\nclass ProductController extends Controller\n{\n    public function index(){\n        $products = Product::all()->toArray();\n        $categories= Category::all()->toArray();\n        $carousals= Carousal::all()->toArray();\n        $banners= Banner::all()->toArray();\n        $services= Service::all()->toArray();\n        // dd($categories);\n        return view('frontend.index')->with(['products'=>$products, 'categories'=>$categories, 'carousals'=>$carousals, 'banners'=>$banners, 'services'=>$services]);\n    }\n    public function women($category_name){\n        $category_name = strtolower($category_name);\n        $products = Product::all()->toArray();\n        // $categories= Category::all()->toArray();\n        // $categories = Category::find($category_name);\n        $categories = Category::all();\n        return view('frontend.women',compact('category_name', 'products', 'categories'));\n    }\n    public function products(){\n        $products = Product::all()->toArray();\n        $variants = Variant::all()->toArray();\n        // dd ($variants);\n        return view('backend.products')->with(['products'=>$products, 'variants'=>$variants]);\n    }\n\n    public function add_products_var(){\n        // $categories = Category::all()->toArray();\n        return view('backend.add_product_var');\n    }\n    public function ret_products_var(Request $request)\n    {\n            $request->validate([\n                'nocolors' => 'required',\n                'nosizes' => 'required',\n            ]);\n            $nocolors = $request->input('nocolors');\n            $nosizes = $request->input('nosizes');\n            $variants_no = [\n                'nocolors' => $nocolors,\n                'nosizes' => $nosizes,\n            ];\n            $categories = Category::all()->toArray();\n            session()->put('variants_no', $variants_no);\n            // dd($variants_no);\n            return view('backend.add_products', [\n                'variants_no' => $variants_no,\n                'categories' => $categories,\n            ]);\n    }\n    public function add_products(){\n        $categories = Category::all()->toArray();\n        return view('backend.add_products')->with('categories',$categories);\n    }\n\n    public function ret_products(Request $request){\n        // dd($request->input('product_quantity'));\n        $lastproduct_unicode = Product::max('product_unicode');\n        $product_unicode = $lastproduct_unicode ? $lastproduct_unicode + 1 : 1;\n        $variants_no = session('variants_no');\n        // dd($variants_no);\n        $request->validate(\n            [\n                'product_title'=>'required',\n                'product_price'=>'required',\n                'product_color'=>'required',\n                'product_size'=>'required',\n                'product_quantity'=>'required',\n                'product_category'=>'required',\n                'product_image'=>'required',\n                'product_code'=>'required',\n                'product_description'=>'required',\n            ]\n            );\n\n            // dd($request->all());\n            $image = $request->file('product_image')->getClientOriginalName();\n            $request->file('product_image')->move(public_path('/backend/assets/img/'), $image);\n            // $product_unicode=$request->input('product_unicode');\n            $product_category=$request->input('product_category');\n            $product_feature=$request->input('product_feature');\n            $product_image=$request->file('product_image');\n            $product_title=$request->input('product_title');\n            $product_price=$request->input('product_price');\n            $product_code=$request->input('product_code');\n            $product_description=$request->input('product_description');\n            $total_sizes = $variants_no['nosizes'];\n            $total_colors = $variants_no['nocolors'];\n\n            $data=array('product_category'=>$product_category,\n            'product_unicode'=>$product_unicode,\n            'product_feature'=>$product_feature,\n            'product_image' => '/backend/assets/img/' . $image,\n            \"product_title\"=>$product_title,\n            \"product_price\"=>$product_price,\n            \"product_code\"=>$product_code,\n            \"product_description\"=>$product_description,\n            \"total_sizes\"=>$total_sizes,\n            \"total_colors\"=>$total_colors,\n        );\n            DB::table('products')->insert($data);\n\n            $products = DB::table('products')->get();\n\n            $productsArray = json_decode(json_encode($products), true);\n\n//****************************************** Variants *********************************************\n\n            // $product_unicode = $request->input('product_unicode');\n            $product_color = $request->input('product_color');\n            $product_size = $request->input('product_size');\n            $product_quantity = $request->input('product_quantity');\n\n\n            for ($i = 0; $i < count($product_color); $i++) {\n                $data = [\n                    'product_unicode' => $product_unicode,\n                    'product_color' => isset($product_color[$i]) ? $product_color[$i] : null,\n                    'product_size' => isset($product_size[$i]) ? $product_size[$i] : null,\n                    'product_quantity' => isset($product_quantity[$i]) ? $product_quantity[$i] : null,\n                ];\n                DB::table('variants')->insert($data);\n            }\n            $variants = DB::table('variants')->get();\n            $variantsArray = json_decode(json_encode($variants), true);\n            return redirect('/admin/products');\n}\n\n\n    public function view_product($id){\n\n            $products = Product::find($id);\n            $variants = Variant::where('product_unicode', $products->product_unicode)->get();\n// dd($variants);\n            return view('backend.view_product',['products' => $products, 'variants' => $variants]);\n    }\n\n        public function ret_view_products(Request $request){\n            // dd($request->input('product_quantity'));\n        }\n\n    public function edit_product($id){\n        $products = Product::find($id)->toArray();\n        $category_name = $products['product_category'];\n        $category = Category::where('category_name', $category_name)->first();\n        $variants = Variant::where('product_unicode', $products['product_unicode'])->get();\n        // $variants_no = session('variants_no');\n        // dd($variants_no);\n        return view('backend.edit_product')->with(['products'=>$products, 'category'=>$category,'variants' => $variants, 'id' => $id,]);\n    }\n\n    public function ret_edit_product(Request $request, $id)\n{\n    $request->validate([\n        'product_title' => 'required',\n        'product_price' => 'required',\n        'product_color' => 'required',\n        'product_size' => 'required',\n        'product_quantity' => 'required',\n        'product_category' => 'required',\n        'product_code' => 'required',\n        'product_description' => 'required',\n    ]);\n\n    // Handle product editing\n    $product = Product::find($id);\n    $product->product_category = $request->input('product_category');\n    $product->product_feature = $request->input('product_feature');\n    $product->product_title = $request->input('product_title');\n    $product->product_price = $request->input('product_price');\n    $product->product_code = $request->input('product_code');\n    $product->product_description = $request->input('product_description');\n\n    // Check if a new image is uploaded\n    if ($request->hasFile('product_image')) {\n        $image = $request->file('product_image');\n\n        // Delete the old image if it exists\n        if ($product->product_image) {\n            Storage::delete($product->product_image);\n        }\n\n        $imagePath = '/backend/assets/img/' . $image->getClientOriginalName();\n        $image->move(public_path('/backend/assets/img/'), $imagePath);\n        $product->product_image = $imagePath;\n    }\n\n    $product->save();\n\n    // Handle variants editing\n    $product_color = $request->input('product_color');\n    $product_size = $request->input('product_size');\n    $product_quantity = $request->input('product_quantity');\n\n    $variants = Variant::where('product_unicode', $product->product_unicode)->get();\n\n    foreach ($variants as $index => $variant) {\n        if (isset($product_color[$index]) && isset($product_size[$index]) && isset($product_quantity[$index])) {\n            $variant->product_color = $product_color[$index];\n            $variant->product_size = $product_size[$index];\n            $variant->product_quantity = $product_quantity[$index];\n            $variant->save();\n        }\n    }\n\n    return redirect()->route('admin.products')->with('success', 'Product updated successfully');\n}\n\n\npublic function delete_product($id)\n{\n    $product = Product::find($id);\n    $variants = Variant::where('product_unicode', $product->product_unicode)->get();\n\n    $product->delete();\n\n    foreach ($variants as $variant) {\n        $variant->delete();\n    }\n\n    return redirect('/admin/products');\n}\n\n\npublic function show($id)\n{\n    $product = Product::find($id);\n    $variants = Variant::where('product_unicode', $product->product_unicode)->get();\n    return view('frontend.show', ['product' => $product, 'variants' => $variants]);\n}\n\npublic function cart(){\n    $cartItems = session()->get('cart', []);\n    $products = Product::whereIn('id', array_keys($cartItems))->get();\n\n    return view('frontend.cart', ['products' => $products]);\n}\n\npublic function addToCart(Request $request)\n{\n    $productId = $request->input('product_id');\n    $product = Product::find($productId);\n    $variants = Variant::where('product_unicode', $product->product_unicode)->get();\n    if (!$product) {\n        return back()->with('error', 'Product not found.');\n    }\n    $customerQuantity = $request->input('customer_quantity');\n    $customer_color = $request->color__radio;\n    $customer_size = $request->size__radio;\n    $cart = session()->get('cart', []);\n    if (isset($cart[$productId])) {\n        $cart[$productId]['quantity'] += $customerQuantity;\n    } else {\n        $cart[$productId] = [\n            'product_id' => $product->id,\n            'name' => $product->product_title,\n            'price' => $product->product_price,\n            'quantity' => $customerQuantity,\n            'color' => $customer_color,\n            'size' => $customer_size,\n            'code' => $product->product_code,\n            'category'=>$product->product_category,\n        ];\n    }\n    // dd($cart);\n    session()->put('cart', $cart);\n    session()->flash('success', 'Item added successfully to the cart!');\n    return back()->with('success', 'Product added to cart!');\n}\npublic function addToCartonpage(Request $request)\n{\n    $productId = $request->input('product_id');\n    $product = Product::find($productId);\n    $variants = Variant::where('product_unicode', $product->product_unicode)->get();\n    $customerQuantity = 1; // Set the quantity as 1\n    $cart = session()->get('cart', []);\n\n    if (isset($cart[$productId])) {\n        $cart[$productId]['quantity'] += $customerQuantity;\n    } else {\n        $cart[$productId] = [\n            'product_id' => $product->id,\n            'name' => $product->product_title,\n            'price' => $product->product_price,\n            'quantity' => $customerQuantity,\n            'color' => $product->product_color,\n            'size' => $product->product_size,\n            'code' => $product->product_code,\n            'category'=>$product->product_category,\n        ];\n    }\n    // dd($cart);\n    session()->put('cart', $cart);\n    $request->session()->flash('success', 'Item added successfully to the cart!');\n\n    // Pass the cart and products data to the view\n    return redirect()->back()->with('success', 'Item added successfully to the cart!');\n}\n\npublic function removeItem(Request $request)\n{\n    $productId = $request->input('product_id');\n    $cart = session()->get('cart', []);\n    if (isset($cart[$productId])) {\n        unset($cart[$productId]);\n        session()->put('cart', $cart);\n        return redirect()->back()->with('success', 'Item removed from cart.');\n    }\n\n    return redirect()->back()->with('error', 'Item not found in cart.');\n}\n\npublic function product_display()\n{\n    $products = Product::all()->toArray(); //take data out of model\n        return view('backend.product_display')->with('products',$products);\n}\n\n// *******************************Checkout*************************************************\n\npublic function checkout(Request $request)\n    {\n        $cartItems = session()->get('cart', []);\n        $products = Product::whereIn('id', array_keys($cartItems))->get();\n        // $variants = Variant::where('product_unicode', $products->product_unicode)->get();\n        $total=0;\n        if(isset($products[0])){\n            foreach ($products as $product) {\n                $price = $product[\"product_price\"] * $product->customerQuantity;\n                $total += $price;\n            }\n            $total = $total+200;\n            session()->put('total', $total);\n        return view('frontend.checkout', ['products' => $products]);\n\n        }else{\n        return redirect('/');\n        }\n    }\n    public function ret_checkout(Request $request)\n    {\n        $cartItems = session()->get('cart', []);\n        $products = Product::whereIn('id', array_keys($cartItems))->get();\n        if(isset($products[0])){\n            $request->validate(\n                [\n                    'first_name'=>'required',\n                    'last_name'=>'required',\n                    'country'=>'required',\n                    'address'=>'required',\n                    'city'=>'required',\n                    'zip'=>'required',\n                    'phone'=>'required',\n                    'email'=>'required',\n                ]\n                );\n// ****************************Customers Table*********************************************************\n                $lastOrderNumber = Customer::max('order_number');\n                $orderNumber = $lastOrderNumber ? $lastOrderNumber + 1 : 1;\n                $customer = new Customer();\n                $customer->order_number = str_pad($orderNumber, 8, '0', STR_PAD_LEFT);\n                $customer->first_name = $request->input('first_name');\n                $customer->last_name = $request->input('last_name');\n                $customer->country = $request->input('country');\n                $customer->address = $request->input('address');\n                $customer->city = $request->input('city');\n                $customer->zip = $request->input('zip');\n                $customer->phone = $request->input('phone');\n                $customer->email = $request->input('email');\n                $customer->notes = $request->input('notes');\n                $customer->save();\n                session()->put('customer', $customer);\n\n// ****************************Orders Table*********************************************************\n        $order = new Order();\n        $order->order_number = str_pad($orderNumber, 8, '0', STR_PAD_LEFT);\n        $order->customer_name = $request->input('first_name') . ' ' . $request->input('last_name');\n        $order->totalbill = session()->get('total');;\n        $order->status=\"Pending\";\n        $order->save();\n        session()->put('order', $order);\n\n// ****************************OrderItems Table*********************************************************\n$cart = session()->get('cart', []);\n// dd($cart);\nforeach ($cart as $cart) {\n        $orderItems = new OrderItem();\n        $orderItems->order_number = str_pad($orderNumber, 8, '0', STR_PAD_LEFT);\n        $orderItems->product_code = $cart['code'];\n        $orderItems->product_title = $cart['name'];\n        $orderItems->product_size = $cart[\"size\"];\n        $orderItems->product_color = $cart[\"color\"];\n        $orderItems->product_quantity = $cart['quantity'];\n        $orderItems->product_price = $cart['price'];\n        $orderItems->product_category = $cart['category'];\n        $orderItems->save();\n}\n$productunicode = $products->pluck('product_unicode');\n// dd($productunicode );\nforeach ($productunicode as $productunicode) {\n    $variants = Variant::where('product_unicode', $productunicode)->get();\n\n    foreach ($variants as $variant) {\n        $cartItems = session()->get('cart', []);\n        $productIds = array_keys($cartItems);\n        $products = Product::whereIn('id', $productIds)->get();\n\n        foreach ($products as $product) {\n            if ($variant['product_color'] === $cart['color']) {\n                $orderItems = OrderItem::where('id', $product->id)->get();\n                $totalQuantity = $orderItems->sum('product_quantity');\n                $variant->product_quantity -= $totalQuantity;\n                $variant->save();\n            }\n        }\n    }\n}\n\nsession()->forget('cart');\nreturn redirect('/')->with('products', $products);\n        }else{\n        return redirect('/');\n        }\n    }\n\npublic function orders(Request $request)\n{\n    $orders = Order::all()->toArray();\n    $customers = Customer::all()->toArray();\n    // $orders = session()->get('order', []);\n    // dd($orders);\n    return view('backend.orders', ['orders' => $orders], ['customers' => $customers]);\n}\n\n\npublic function edit_order($id){\n    $order = Order::find($id)->toArray();\n    return view('backend.edit_order')->with('orders', $order);\n}\n\npublic function ret_edit_order(Request $request, $id){\n    $order = Order::find($id);\n\n   $order->order_number = $request->input('order_number');\n   $order->customer_name = $request->input('customer_name');\n   $order->totalbill = $request->input('totalbill');\n   $order->status = $request->input('status');\n   $order->save();\n   $orderArray = $order->toArray();\n   return redirect()->route('backend.orders')->with('orders', [$orderArray]);\n}\n\npublic function view_order($id)\n{\n    $order = Order::find($id)->toArray();\n    $orderNumber = $order['order_number'];\n    $orderitem = OrderItem::where('order_number', $orderNumber)->get()->toArray();\n    $customer = Customer::find($id)->toArray();\n\n    return view('backend.view_order')->with(['customers' => [$customer], 'order' => $order, 'orderitems' => $orderitem, 'orders' => [$order]]);\n}\n\npublic function dresses()\n{\n    $products = Product::all()->toArray(); //take data out of model\n    return view('frontend.category.dresses')->with('products',$products);\n}\n\npublic function category($product_category)\n{\n    $products = Product::where('product_category', $product_category)->get();\n    $categories = ['flatshoes', 'highheels', 'boots'];\n\n    if ($product_category === 'footwear') {\n        $products = Product::whereIn('product_category', $categories)->get();\n    } else {\n        $products = Product::where('product_category', $product_category)->get();\n    }\n    // dd($products);\n    return view('frontend.category', ['products' => $products]);\n}\n\npublic function blog()\n{\n    $blogs = Blog::all()->toArray();\n    return view('frontend.blog')->with('blogs', $blogs);\n}\npublic function add_blog()\n{\n    return view('backend.add_blog');\n}\npublic function ret_blog(Request $request){\n    $request->validate(\n        [\n            'blog_title'=>'required',\n            'blog_tag'=>'required',\n            'blog_author'=>'required',\n            'blog_date'=>'required',\n            'blog_picture'=>'required',\n            'blog_p1'=>'required',\n        ]\n        );\n        // dd($request->all());\n        // dd($request->all());\n        $image = $request->file('blog_picture')->getClientOriginalName();\n        $request->file('blog_picture')->move(public_path('/backend/assets/img/'), $image);\n\n\n        $blog_title=$request->input('blog_title');\n        $blog_picture=$request->file('blog_picture');\n        $blog_tag=$request->input('blog_tag');\n        $blog_author=$request->input('blog_author');\n        $blog_date=$request->input('blog_date');\n        $blog_p1=$request->input('blog_p1');\n        $blog_p2=$request->input('blog_p2');\n        $blog_p3=$request->input('blog_p3');\n\n        $data=array('blog_title'=>$blog_title,\n        'blog_picture' => '/backend/assets/img/' . $image,\n        \"blog_tag\"=>$blog_tag,\n        \"blog_author\"=>$blog_author,\n        \"blog_date\"=>$blog_date,\n        \"blog_p1\"=>$blog_p1,\n        \"blog_p2\"=>$blog_p2,\n        \"blog_p3\"=>$blog_p3,\n    );\n        DB::table('blogs')->insert($data);\n\n        $blogs = DB::table('blogs')->get();\n\n        $blogsArray = json_decode(json_encode($blogs), true);\n        return redirect('/admin/blog')->with('blogs', $blogsArray);\n}\n\npublic function blog_details($id)\n    {\n        $blog = Blog::where('id', $id)->first();\n        // dd($blog);\n        return view('frontend.blog_details',['blog'=>$blog]);\n    }\npublic function blog_list()\n{\n        $blog = Blog::all()->toArray();\n        return view('backend.blog',['blog'=>$blog]);\n}\npublic function edit_blog($id){\n    $blogs = blog::find($id)->toArray();\n    return view('backend.edit_blog')->with('blogs',$blogs);\n}\n\npublic function ret_edit_blog(Request $request, $id){\n    $blog=blog::find($id);\n    $blog->blog_title = $request->input('blog_title');\n    $blog->blog_tag = $request->input('blog_tag');\n    $blog->blog_author = $request->input('blog_author');\n    $blog->blog_date = $request->input('blog_date');\n    $blog->blog_p1 = $request->input('blog_p1');\n    $blog->blog_p2 = $request->input('blog_p2');\n    $blog->blog_p3 = $request->input('blog_p3');\n    // Check if a new image is uploaded\nif ($request->hasFile('blog_picture')) {\n    $image = $request->file('blog_picture');\n\n    // Delete the old image if it exists\n    if ($blog->blog_picture) {\n        Storage::delete($blog->blog_picture);\n    }\n\n    $imagePath = '/backend/assets/img/' . $image->getClientOriginalName();\n$image->move(public_path('/backend/assets/img/'), $imagePath);\n$blog->blog_picture = $imagePath;\n}\n\n    $blog->save();\n\n    return redirect()->route('admin.blog')->with('success', 'blog updated successfully');\n}\npublic function delete_blog($id){\n    $blogs= Blog::find($id);\n    $blogs->delete();\n    return redirect('/admin/blog');\n}\npublic function contact()\n{\n    $latestContact = Contact::latest('id')->first();\n    return view('frontend.contact')->with('contact', $latestContact);\n}\n\npublic function contact_info(){\n    return view('backend.contact_info');\n}\npublic function ret_contact_info(Request $request){\n    $request->validate(\n        [\n            'contact_address'=>'required',\n            'contact_number'=>'required',\n            'contact_email'=>'required',\n        ]\n        );\n        $Address=$request->input('contact_address');\n        $Phone=$request->input('contact_number');\n        $Email=$request->input('contact_email');\n\n        $data=array('Address'=>$Address,\n        \"Phone\"=>$Phone,\n        \"Email\"=>$Email,\n    );\n        DB::table('contacts')->insert($data);\n\n        $contacts = DB::table('contacts')->get();\n\n        $contactsArray = json_decode(json_encode($contacts), true);\n\n    return redirect('/admin/contact');\n}\n\npublic function ret_contact(Request $request){\n    $request->validate(\n        [\n            'name'=>'required',\n            'email'=>'required',\n            'phone'=>'required',\n            'message'=>'required',\n        ]\n        );\n        $name=$request->input('name');\n        $phone=$request->input('phone');\n        $email=$request->input('email');\n        $message=$request->input('message');\n        $status=\"un-read\";\n\n        $data=array('name'=>$name,\n        \"phone\"=>$phone,\n        \"email\"=>$email,\n        \"message\"=>$message,\n        \"status\"=>$status,\n    );\n        DB::table('messages')->insert($data);\n\n        $messages = DB::table('messages')->get();\n\n        $messagesArray = json_decode(json_encode($messages), true);\n    return redirect('/contact-us');\n}\n\npublic function messages(){\n    $messages=Messages::all()->toArray();\n    return view('backend.messages',['messages'=>$messages]);\n}\n\npublic function view_messages($id)\n{\n    $messages = messages::find($id)->toArray();\n\n    return view('backend.view_messages')->with('messages',[$messages]);\n}\n\npublic function ret_view_messages(Request $request, $id)\n{\n    $messages = Messages::find($id);\n    // $messages->name='name';\n    // $messages->phone='phone';\n    // $messages->email='email';\n    // $messages->message='message';\n    $messages->status=\"read\";\n    $messages->save();\n   $messageArray = $messages->toArray();\n   return redirect()->route('backend.messages')->with('messages', [$messageArray]);\n}\n\npublic function admin(){\n    $orders=Order::all()->toArray();\n    $products=Product::all()->toArray();\n    $orderitems=Orderitem::all()->toArray();\n    $variants=Variant::all()->toArray();\n    $categories=Category::all()->toArray();\n    return view('backend.index')->with(['orders' => $orders, 'products' => $products, 'orderitems'=>$orderitems,'variants'=>$variants,'categories'=>$categories]);\n}\n\npublic function search(Request $request)\n    {\n        $searchTerm = $request->input('search');\n\n        // Perform the search query using the input search term\n        $results = Product::where('product_title', 'like', \"%$searchTerm%\")\n            ->orWhere('product_category', 'like', \"%$searchTerm%\")\n            ->get();\n\n        return view('backend.search', compact('results', 'searchTerm'));\n    }\n\n    public function systemsettings()\n    {\n        return view('backend.systemsettings');\n    }\n    public function ret_systemsettings(Request $request)\n    {$request->validate(\n        [\n            'brand_title'=>'required',\n            'brand_favicon'=>'required',\n\n        ]\n        );\n        $image = $request->file('brand_favicon')->getClientOriginalName();\n        $request->file('brand_favicon')->move(public_path('/backend/assets/img/'), $image);\n        $brand_name=$request->input('brand_title');\n        $brand_logo=$request->file('brand_favicon');\n        $data=array('brand_name'=>$brand_name,\n        'brand_logo' => '/backend/assets/img/' . $image,\n    );\n        DB::table('brands')->insert($data);\n\n        $brands = DB::table('brands')->get();\n\n        $brandsArray = json_decode(json_encode($brands), true);\n        return redirect('/admin/systemsettings');\n    }\n    public function homesettings()\n    {\n        $categories = Category::all()->toArray();\n        $carousals = Carousal::all()->toArray();\n        $services = Service::all()->toArray();\n        $footers = Footer::all()->toArray();\n        // dd($categories);\n        return view('backend.homesettings')->with(['categories'=>$categories, 'carousals'=>$carousals, 'services'=>$services, 'footers'=>$footers]);\n    }\n    public function categories()\n    {\n        return view('backend.categories');\n    }\n    public function ret_categories(Request $request)\n{\n    $request->validate(\n        [\n            'category_name'=>'required',\n            'category_image'=>'required',\n            'category_display_title'=>'required',\n        ]\n        );\n\n        // dd($request->all());\n        $image = $request->file('category_image')->getClientOriginalName();\n        $request->file('category_image')->move(public_path('/backend/assets/img/'), $image);\n\n        $category_name=$request->input('category_name');\n        $category_image=$request->file('category_image');\n        $is_first=$request->input('is_first?');\n        $category_display_title=$request->input('category_display_title');\n\n        $data=array('category_name'=>$category_name,\n        'category_image' => '/backend/assets/img/' . $image,\n        'is_first'=>$is_first,\n        'category_display_title'=>$category_display_title,\n    );\n        DB::table('categories')->insert($data);\n\n        $categories = DB::table('categories')->get();\n\n        $categoriesArray = json_decode(json_encode($categories), true);\n\n        return redirect('admin/homesettings')->with('categories', $categoriesArray);\n    }\n    public function edit_category($id){\n        $categories = Category::find($id)->toArray();\n        return view('backend.edit_category')->with('categories',$categories);\n    }\n\n    public function ret_edit_category(Request $request, $id){\n        $category=category::find($id);\n        $category->category_name = $request->input('category_name');\n    if ($request->hasFile('category_image')) {\n        $image = $request->file('category_image');\n\n        // Delete the old image if it exists\n        if ($category->category_image) {\n            Storage::delete($category->category_image);\n        }\n\n        $imagePath = '/backend/assets/img/' . $image->getClientOriginalName();\n    $image->move(public_path('/backend/assets/img/'), $imagePath);\n    $category->category_image = $imagePath;\n    }\n\n        $category->save();\n\n        return redirect('/admin/homesettings')->with('success', 'category updated successfully');\n    }\n    public function delete_category($id){\n        $categories= Category::find($id);\n        $categories->delete();\n        return redirect('/admin/homesettings');\n    }\n\n    public function carousals()\n    {\n        return view('backend.carousals');\n    }\n    public function ret_carousals(Request $request)\n{\n    $request->validate(\n        [\n            'carousal_tag'=>'required',\n            'carousal_text'=>'required',\n        ]\n        );\n        $carousal_tag=$request->input('carousal_tag');\n        $carousal_text=$request->input('carousal_text');\n\n        $data=array('carousal_tag'=>$carousal_tag,\n        'carousal_text'=>$carousal_text,\n    );\n        DB::table('carousals')->insert($data);\n\n        $carousals = DB::table('carousals')->get();\n\n        $carousalsArray = json_decode(json_encode($carousals), true);\n\n        return redirect('admin/homesettings')->with('carousals', $carousalsArray);\n    }\n    public function edit_carousal($id){\n        // dd($id);\n        $carousals = Carousal::find($id)->toArray();\n        return view('backend.edit_carousal')->with('carousals',$carousals);\n    }\n\n    public function ret_edit_carousal(Request $request, $id){\n        $carousal=Carousal::find($id);\n        $carousal->carousal_tag = $request->input('carousal_tag');\n        $carousal->carousal_text = $request->input('carousal_text');\n        $carousal->save();\n\n        return redirect('/admin/homesettings')->with('success', 'category updated successfully');\n    }\n    public function delete_carousal($id){\n        $carousals= Carousal::find($id);\n        $carousals->delete();\n        return redirect('/admin/homesettings');\n    }\n    public function banners()\n    {\n        return view('backend.banner');\n    }\n    public function ret_banners(Request $request)\n{\n    $request->validate(\n        [\n            'banner'=>'required',\n        ]\n        );\n\n    // dd($request->all());\n    $image = $request->file('banner')->getClientOriginalName();\n    $request->file('banner')->move(public_path('/backend/assets/img/'), $image);\n    $banner=$request->file('banner');\n\n    $data=array(\n    'banner' => '/backend/assets/img/' . $image,);\n    DB::table('banners')->insert($data);\n    $banners = DB::table('banners')->get();\n    $bannersArray = json_decode(json_encode($banners), true);\n        return redirect('admin/homesettings')->with('banners', $bannersArray);\n}\npublic function services()\n    {\n        return view('backend.services');\n    }\npublic function ret_services(Request $request)\n{\n    $request->validate(\n        [\n            'service_name'=>'required',\n            'service_description'=>'required',\n        ]\n        );\n\n    // dd($request->all());\n    if ($request->hasFile('service_image')) {\n        $image = $request->file('service_image')->getClientOriginalName();\n        $request->file('service_image')->move(public_path('/backend/assets/img/'), $image);\n        $service_image = '/backend/assets/img/' . $image;\n    } else {\n        $service_image = '0'; // Set a default value if no image is uploaded\n    }\n    $service_description=$request->input('service_description');\n    $service_icon=$request->input('service_icon');\n    $service_name=$request->input('service_name');\n    $data=array('service_name'=>$service_name,\n    'service_description'=>$service_description,\n    'service_icon'=>$service_icon,\n    'service_image' => $service_image);\n    DB::table('services')->insert($data);\n    $services = DB::table('services')->get();\n    $servicesArray = json_decode(json_encode($services), true);\n        return redirect('admin/homesettings')->with('services', $servicesArray);\n}\npublic function delete_service($id){\n    $services= Service::find($id);\n    $services->delete();\n    return redirect('/admin/homesettings');\n}\npublic function header(){\n    $categories = Category::all()->toArray();\n    return view('backend.header')->with(['categories'=>$categories]);\n}\npublic function ret_header(Request $request)\n{\n    $headers = [];\n    $categories = Category::all()->toArray();\n    $headers[] = [\n        'header_name' => 'Home',\n        'is_checked' => $request->has('home'),\n    ];\n    foreach ($categories as $category) {\n        $headers[] = [\n            'header_name' => $category['category_name'],\n            'is_checked' => $request->has($category['category_name']),\n        ];\n    }\n    $headers[] = [\n        'header_name' => 'Blog',\n        'is_checked' => $request->has('blog'),\n    ];\n\n    $headers[] = [\n        'header_name' => 'Contact',\n        'is_checked' => $request->has('contact'),\n    ];\n// dd($headers);\n    Header::truncate(); // Clear existing menu settings (optional)\n\n    foreach ($headers as $header) {\n        Header::create($header);\n    }\n\n    return redirect('/admin/homesettings')->with(['categories' => $categories]);\n}\npublic function ret_logo(Request $request)\n    {\n        $request->validate([\n            'logo' => 'required|image|mimes:jpeg,png|max:2048',\n        ]);\n\n        if ($request->hasFile('logo')) {\n            Logo::truncate();\n            $image = $request->file('logo')->getClientOriginalName();\n            $request->file('logo')->move(public_path('/backend/assets/img/'), $image);\n\n            $logo = new Logo();\n            $logo->logo = '/backend/assets/img/' . $image;\n            $logo->save();\n\n            return redirect()->back()->with('success', 'Logo uploaded successfully!');\n\n        }\n\n        return redirect()->back()->with('error', 'Logo upload failed!');\n    }\n\n    public function footer()\n    {\n        return view('backend.footer');\n    }\n    public function ret_footer(Request $request)\n{\n    $request->validate(\n        [\n            'footer_insta'=>'required',\n            'footer_image'=>'required',\n        ]\n        );\n        $image = $request->file('footer_image')->getClientOriginalName();\n        $request->file('footer_image')->move(public_path('/backend/assets/img/'), $image);\n\n        $footer_insta=$request->input('footer_insta');\n        $footer_image=$request->file('footer_image');\n\n        $data=array('footer_insta'=>$footer_insta,\n        'footer_image' => '/backend/assets/img/' . $image,\n    );\n        DB::table('footers')->insert($data);\n\n        $footer = DB::table('footers')->get();\n\n        $footerArray = json_decode(json_encode($footer), true);\n\n        return redirect('admin/homesettings')->with('footer', $footerArray);\n    }\n    public function edit_footer($id){\n        // dd($id);\n        $footer = Footer::find($id)->toArray();\n        return view('backend.edit_footer')->with('footer',$footer);\n    }\n\n    public function ret_edit_footer(Request $request, $id){\n        $footer=footer::find($id);\n        // $footer->footer_insta = $request->input('footer_insta');\n        if ($request->hasFile('footer_image')) {\n            $image = $request->file('footer_image');\n\n            // Delete the old image if it exists\n            if ($footer->footer_image) {\n                Storage::delete($footer->footer_image);\n            }\n\n            $imagePath = '/backend/assets/img/' . $image->getClientOriginalName();\n        $image->move(public_path('/backend/assets/img/'), $imagePath);\n        $footer->footer_image = $imagePath;\n        }\n        $footer->save();\n\n        return redirect('/admin/homesettings')->with('success', 'footer updated successfully');\n    }\n    public function delete_footer($id){\n        $footer= footer::find($id);\n        $footer->delete();\n        return redirect('/admin/homesettings');\n    }\n\n}\n"
        }
    ]
}